@inject Ingredient_inator.Data.ApplicationDbContext _context;
@model IEnumerable<Ingredient_inator.Models.Recipe>
@{
    ViewData["Title"] = "Search";
}

@section Styles {
    <style>
        h1 {
            display: inline-block;
            vertical-align: middle;
        }
        
        .thead-red {
            background-color: #AC3931;
        }

        .btn-red, .btn-red:active, .btn-red:visited {
            background-color: #AC3931;
        }

        .btn-red:hover {
            background-color: #D64C42;
        }
    </style>
}

<div class="mb-3">
    <div class="row">
        <div class="col-9">
            <h1>Ingredient-to-recipe search</h1>
        </div>

        <div class="col mt-1">
            <form asp-action="I2RGResults" asp-controller="Recipe" class="form-inline">
                <div class="input-group">
                    <input class="form-control" name="SearchString" placeholder="Ingredients..." type="text">

                    <div class="input-group-append">
                        <button class="btn btn-red text-light" type="Submit">Search</button>
                    </div>

                    <small class="form-text text-muted">Separate keywords with commas</small>
                </div>
            </form>
        </div>
    </div>
</div>

<table class="table table-hover mt-3" id="recipes">
    <thead class="thead-red">
        <tr>
            <th class="text-light">Name</th>
            <th class="text-light">Category</th>
            <th class="text-light">Serving Size</th>
            <th class="text-light">Portion List</th>
            <th class="text-light">Ingredient List</th>
            <th class="text-light">Operations</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="ViewRecipe" asp-controller="Recipe" asp-route-id="@item.RecipeId" style="color: black">@Html.DisplayFor(modelItem => item.Name)</a>
                </td>

                @{
                    var Category = _context.Categories.Where(C => C.CategoryId == item.Category).SingleOrDefault();
                }

                <td>
                    @if (Category != null)
                    {
                        <a asp-action="ViewCategory" asp-controller="Category" asp-route-id="@item.Category">@Category.Name</a>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.ServingSize)</td>
                <td>@Html.DisplayFor(modelItem => item.PortionList)</td>
                <td>@Html.DisplayFor(modelItem => item.IngredientList)</td>
                <td>
                    <a asp-action="ViewRecipe" asp-controller="Recipe" asp-route-id="@item.RecipeId" class="text-decoration-none">
                        <i class="far fa-eye fa-lg"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>