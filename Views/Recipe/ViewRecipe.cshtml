@using Microsoft.AspNetCore.Identity

@inject Ingredient_inator.Data.ApplicationDbContext _context;
@inject SignInManager<ApplicationUser> SignInManager
@model Ingredient_inator.Models.RecipeReviewViewModel
@{
    ViewData["Title"] = Model.Recipe.Name + " - Recipe";
}

@section Styles {
    <style>
        h1 {
            color: #AC3931;
            font-weight: 600;
            text-transform: uppercase;
            display: inline-block;
            vertical-align: middle;
        }

        h3 {
            color: #AC3931;
            font-weight: 600;
        }

        .categoryName, .byLine {
            color: #AC3931;
        }

        .photoLink {
            font-size: 1.125rem;
            text-anchor: middle;
            object-fit: cover;
            object-position: center;
        }

        .fa-edit {
            cursor: pointer;
            color: #0366D6;
        }
    </style>
}

<div class="mb-5">
    <a asp-action="ViewRecipe" asp-controller="Recipe" asp-route-id="@Model.RecipeId">< Go back</a>

    <div>
        <h1>@Html.DisplayFor(model => model.Recipe.Name)</h1>

        @if (ViewBag.UserId == Model.Recipe.Author)
        {
            <a asp-action="Edit" asp-controller="Recipe" asp-route-id="@Model.Recipe.RecipeId" class="btn btn-outline-warning ml-5">Edit Recipe</a>
            <a asp-action="Delete" asp-controller="Recipe" asp-route-id="@Model.Recipe.RecipeId" class="btn btn-outline-danger" onclick='return confirm("Are you sure?")'>Delete Recipe</a>
        }

        <a asp-action="ViewShoppingList" asp-controller="Recipe" asp-route-id="@Model.Recipe.RecipeId" class="btn btn-outline-info ml-3" onclick="hide(); window.print(); show()">Print as Shopping List</a>
    </div>

    @{
        var Author = _context.Users.Where(U => U.Id == Model.Recipe.Author).SingleOrDefault();
        var Category = _context.Categories.Where(C => C.CategoryId == Model.Recipe.Category).SingleOrDefault();
    }

    <h5 class="mt-3">
        @if (Category != null)
        {
            <span>Category: <a asp-action="ViewCategory" asp-controller="Category" asp-route-id="@Category.CategoryId" class="categoryName">@Category.Name</a> |</span>
        }

        <span class="byLine">@Author.FirstName @Author.LastName</span>
    </h5>
    <hr>
    <div class="row">
        <p class="col-4">Ingredients</p>
        <p class="col-4">Instructions</p>
        <p class="col-4">Media</p>
    </div>

    <div class="row">
        <p class="text-right col-1">@Html.Raw(Model.Recipe.PortionList.Replace(",", "<br/><br/>"))</p>
        <p class="col-2">@Html.Raw(Model.Recipe.IngredientList.Replace(",", "<br/><br/>"))</p>    
        <div class="col-1"></div>
        <p class="col-4">@Html.Raw(Model.Recipe.Steps.Replace(";", "<br/><br/>"))</p>

        <div class="col-4">
            <img class="d-block user-select-none photoLink" focusable="false" height="300" preserveaspectratio="xMidYMid slice" src="@Html.DisplayFor(model => model.Recipe.PhotoLink)" viewbox="0 0 318 180" width="100%">
            <br>
            @if (Model.Recipe.VideoLink != null)
            {
                <iframe allow="autoplay; encrypted-media" allowfullscreen frameborder="0" height="315" style="width: 100%"  src="@Html.DisplayFor(model => model.Recipe.VideoLink)"></iframe>
            }
            else
            {
                <p>@Author.FirstName has not uploaded a video tutorial.</p>
            }
        </div>
    </div>
    <hr>

    @if (SignInManager.IsSignedIn(User))
    {
        <div class="mt-3 mb-3">
            <h3 class="mb-3">Leave a review</h3>

            <form asp-action="Create" asp-controller="Review" class="form-inline" method="post">
                <input asp-for="RecipeId" type="hidden" value="@Html.Raw(Model.Recipe.RecipeId)">
                <div class="form-group">
                    <textarea asp-for="Content" cols="50" class="form-control" placeholder="What are your thoughts?" required rows="3"></textarea>    
                </div>

                <div class="form-group ml-3">
                    <label for="reviewRating">Rating</label>
                    <select asp-for="Rating" id="reviewRating" class="form-control ml-1" required>
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                    </select>
                </div>

                <button class="btn btn-primary ml-3" type="submit">Submit Review</button>
            </form>
        </div>
        <hr>
    }

    <h3>Reviews (@Model.Reviews.Count)</h3>

    <div class="mt-3 ml-3">
        @foreach (var item in Model.Reviews)
        {
            var Reviewer = _context.Users.Where(U => U.Id == item.Author).SingleOrDefault();

            <div class="mb-1">
                <div class="row reviewContent" data-reviewId="@item.ReviewId">
                    <p>@Html.DisplayFor(modelItem => item.Content)</p>
                </div>
    
                <div class="row mt-3 reviewDiv" data-reviewId="@item.ReviewId">
                    @Reviewer.LastName, @Reviewer.FirstName
                    <i class="fas fa-grip-lines-vertical fa-sm mx-3 mt-2"></i>
                    @item.Rating stars
                    <i class="fas fa-grip-lines-vertical fa-sm mx-3 mt-2"></i>
                    @item.DatePosted.ToString("M/dd/yyyy")

                    @if (ViewBag.UserId == item.Author)
                    {
                        <i class="fas fa-grip-lines-vertical fa-sm mx-3 mt-2"></i>
                        <a class="editReview" data-reviewId="@item.ReviewId"><i class="far fa-edit fa-lg"></i></a>
                        <a asp-action="Delete" asp-controller="Review" asp-route-id="@item.ReviewId" class="ml-3" onclick='return confirm("Are you sure?")'><i class="far fa-trash-alt fa-lg"></i></a>
                    }
                </div>
            </div>

            <form asp-action="Edit" asp-controller="Review" class="form-inline" method="post">
                <input asp-for="ReviewId" type="hidden" value="@Html.Raw(item.ReviewId)">
                <input asp-for="RecipeId" type="hidden" value="@Html.Raw(item.RecipeId)">

                <div class="form-group">
                    <textarea asp-for="Content" cols="50" class="form-control d-none editContent" data-reviewId="@item.ReviewId" placeholder="What are your thoughts?" required rows="3"></textarea>    
                </div>

                <div class="form-group ml-3">
                    @{
                        List<int> ratingNumbers = new List<int>() { 1, 2, 3, 4, 5 };
                    }

                    <select asp-for="Rating" class="form-control d-none editRating ml-1" data-reviewId="@item.ReviewId" required>
                        @foreach (var number in ratingNumbers)
                        {
                            @if (number == item.Rating)
                            {
                                <option selected value="@number">@number</option>
                            }
                            else
                            {
                                <option value="@number">@number</option>
                            }
                        }
                    </select>
                </div>

                <button class="btn btn-primary d-none submitUpdatedReview ml-3" data-reviewId="@item.ReviewId" type="submit">Update</button>
                <button class="btn btn-secondary d-none cancelUpdate ml-2" data-reviewId="@item.ReviewId" type="button">Cancel</button>
            </form>

            <hr>
        }
    </div>
</div>

@section Scripts{
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script>
        $(document).ready(function () {
            $(".editReview").on("click", function () {
                var reviewId = $(this).attr("data-reviewId");
                var addKeywords = [".reviewContent", ".reviewDiv"];
                var removeKeywords = [".editContent", ".editRating", ".submitUpdatedReview", ".cancelUpdate"];

                addKeywords.forEach(element => {
                    $(element).each(function (i, el) {
                        if ($(this).attr("data-reviewId") == reviewId) {
                            $(this).addClass("d-none");
                        }
                    });
                });

                removeKeywords.forEach(element => {
                    $(element).each(function (i, el) {
                        if ($(this).attr("data-reviewId") == reviewId) {
                            $(this).removeClass("d-none");
                        }
                    });
                });
            });

            $(".cancelUpdate").on("click", function () {
                var reviewId = $(this).attr("data-reviewId");
                var addKeywords = [".editContent", ".editRating", ".submitUpdatedReview", ".cancelUpdate"];
                var removeKeywords = [".reviewContent", ".reviewDiv"];

                addKeywords.forEach(element => {
                    $(element).each(function (i, el) {
                        if ($(this).attr("data-reviewId") == reviewId) {
                            $(this).addClass("d-none");
                        }
                    });
                });

                removeKeywords.forEach(element => {
                    $(element).each(function (i, el) {
                        if ($(this).attr("data-reviewId") == reviewId) {
                            $(this).removeClass("d-none");
                        }
                    });
                });
            });
        });
    </script>
}